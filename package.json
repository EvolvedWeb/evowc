{
  "name": "@evolvedweb/wc",
  "version": "1.1.0",
  "description": "Evo-wc transpiler converts a template file based on HTML and XML into a raw JavaScript custom element Web Component.\nOnly write what you need!",
  "bin": {
    "evowc": "bin/evowc.js"
  },
  "scripts": {
    "build:debug": "node --inspect-brk ./bin/evowc.js -f \"**/LoopTest.html\"",
    "build:one": "node ./bin/evowc.js -f \"**/LoopTest.html\"",
    "build": "npm run evowc",
    "debug-mocha": "node --inspect-brk node_modules/mocha/bin/_mocha --reporter tap \"lib/**/*.mocha.js\"",
    "evowc": "node ./bin/evowc.js -f \"**/*.html\"",
    "evowc1": "node ./bin/evowc.js WcLoopElement.html",
    "lint": "eslint \"lib/**/*.js\" \"bin/evowc.js\" \"static/js/*.js\"",
    "postinstall": "npm run build",
    "start": "node app",
    "test-mocha": "nyc --nycrc-path test/.nycrc-mocha.json ./node_modules/.bin/_mocha --reporter-option maxDiffSize=50000 \"lib/**/*.mocha.js\"",
    "test-mocha-mjs": "mocha \"static/js/*.mocha.js\"",
    "test": "npm run lint && npm run test-mocha && npm run test-mocha-mjs",
    "watch": "npm run build && node ./bin/evowc.js watch"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/evolvedweb/evowc.git"
  },
  "author": "Michael Collins <intervalia+evo@gmail.com>",
  "license": "MIT",
  "type": "module",
  "bugs": {
    "url": "https://github.com/evolvedweb/evowc/issues"
  },
  "homepage": "https://www.evowc.com",
  "dependencies": {
    "express": "4.18.2",
    "fast-xml-parser": "4.3.2",
    "glob": "10.3.10",
    "html-minifier-terser": "7.2.0",
    "keypress": "^0.2.1",
    "micromatch": "^4.0.5",
    "node-watch": "^0.7.4"
  },
  "devDependencies": {
    "@types/node": "^20.11.19",
    "chai": "4.3.10",
    "eslint": "8.54.0",
    "mocha": "10.2.0",
    "nyc": "15.1.0",
    "proxyquire": "^2.1.3",
    "sinon": "^17.0.1"
  },
  "directories": {
    "bin": "bin",
    "doc": "docs",
    "example": "components",
    "lib": "lib",
    "test": "test"
  },
  "evo": {
    "wc": {
      "addDebug": false,
      "saveDebugJson": true,
      "minify": {
        "css": true,
        "html": true
      },
      "outExtname": ".js",
      "paths": {
        "componentsRoot": "./static/js/components",
        "publicRoot": "./static",
        "srcRoot": ".",
        "templateRoot": "./components"
      }
    },
    "node": {
      "start": "./app.js",
      "root": ".",
      "watch": [
        "app.js",
        "api/**/*",
        "lib/**/*",
        "routes/**/*"
      ]
    }
  },
  "keywords": [
    "command-line",
    "compile time",
    "compiler",
    "component property attributes",
    "component-based architecture",
    "conditional rendering",
    "CSS encapsulation",
    "custom elements",
    "data binding",
    "data transformation pipes",
    "developer-friendly",
    "event binding",
    "event handling",
    "Evo",
    "evolved web components",
    "evowc",
    "framework",
    "front-end development",
    "lifecycle methods",
    "looping",
    "minimalism",
    "modularity",
    "native DOM events",
    "one-way data binding",
    "performance",
    "reactivity",
    "reusability",
    "shadow DOM",
    "single page application",
    "standards-based",
    "transpiler",
    "two-way data binding",
    "web components",
    "web development"
  ]
}
